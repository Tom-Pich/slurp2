<?php

namespace App\Generator;

use App\Lib\TableReader;

class NPCGenerator
{

	const names = [
		"male-artaille" => [
			"Aldus",
			"Alès",
			"Almius",
			"Alsendre",
			"Ander",
			"Anto",
			"Aurel",
			"Balderico",
			"Covio",
			"Edar",
			"Eldri",
			"Elio",
			"Enz",
			"Fransesc",
			"Gabri",
			"Garvi",
			"Giovan",
			"Ivo",
			"Lenar",
			"Lorenz",
			"Luca",
			"Lucius",
			"Marco",
			"Mati",
			"Matio",
			"Metho",
			"Noco",
			"Ragno",
			"Ricald",
			"Rissep",
			"Romald",
			"Sémis",
			"Suartone",
			"Umbreti",
			"Vine",
		],
		"female-artaille" => [
			"Branca",
			"Julia",
			"Lucila",
			"Aurora",
			"Clara",
			"Emma",
			"Ginevra",
			"Jorgia",
			"Sofia",
			"Beata",
			"Isala",
			"Anna",
			"Arina",
			"Cicelia",
			"Fransesca",
			"Alessie",
			"Aliana",
			"Angila",
			"Aria",
			"Camida",
			"Emina",
			"Gabraella",
			"Léona",
			"Almaria",
			"Liora",
			"Elara",
			"Mina",
			"Miucce",
			"Griana"
		],
		"male-sordolia" => [
			"Arend",
			"Adrian",
			"Alarich",
			"Albrecht",
			"Almuth",
			"Aloisius",
			"Ambrosius",
			"Andries",
			"Anselm",
			"Anthonius",
			"Anton",
			"Arjen",
			"Arminius",
			"Arsinoe",
			"Arthénius",
			"Artus",
			"Aubrey",
			"Augustus",
			"Aurélian",
			"Auxentius",
			"Balderich",
			"Balduin",
			"Baltus",
			"Barent",
			"Barthold",
			"Basilius",
			"Beatus",
			"Berengar",
			"Bertus",
			"Blasius",
			"Bonifaz",
			"Cajetan",
			"Carl",
			"Caspar",
			"Chlodwin",
			"Clemens",
			"Conrad",
			"Cornelius",
			"Daendels",
			"Deodat",
			"Desiderius",
			"Diderik",
			"Diebold",
			"Dirck",
			"Domenikus",
			"Dorus",
			"Dries",
			"Ebrhar",
			"Edmun",
			"Edvar",
			"Eckeman",
			"Elke",
			"Egbert",
			"Elias",
			"Emmerich",
			"Engelbert",
			"Erich",
			"Erwin",
			"Eugen",
			"Eusebius",
			"Ewen",
			"Felix",
			"Floris",
			"Franziskus",
			"Frederek",
			"Fredrik",
			"Fredrin",
			"Gerof",
			"Gerolt",
			"Gerrit",
			"Gertraud",
			"Gervas",
			"Gervasius",
			"Gerwulf",
			"Giel",
			"Geisbert",
			"Gotthard",
			"Gotlin",
			"Govert",
			"Gregor",
			"Gregorius",
			"Gudrun",
			"Guerd",
			"Gustaf",
			"Gysbert",
			"Hannes",
			"Hans",
			"Hänschen",
			"Hansper",
			"Har",
			"Hartmann",
			"Hedwin",
			"Heiner",
			"Henrin",
			"Heinzchen",
			"Hektor",
			"Hendrik",
			"Herlof",
			"Herwin",
			"Honorius",
			"Hubertus",
			"Hubrecht",
			"Huybert",
			"Huyck",
			"Huygen",
			"Ignatius",
			"Ignaz",
			"Imogen",
			"Ireneus",
			"Issak",
			"Ivar",
			"Iwan",
			"Iwein",
			"Jacobus",
			"Januarius",
			"Japie",
			"Jeroen",
			"Joannes",
			"Jochem",
			"Johan",
			"Joren",
			"Jorgen",
			"Joris",
			"Jos",
			"Josef",
			"Jost",
			"Julchen",
			"Julian",
			"Julius",
			"Jur",
			"Justinus",
			"Karel",
			"Karl",
			"Karlheinz",
			"Kaspar",
			"Klaus",
			"Kobie",
			"Koen",
			"Konrad",
			"Konstantin",
			"Korbinian",
			"Krelis",
			"Kristofer",
			"Kunz",
			"Laurens",
			"Laurentius",
			"Leendert",
			"Lieschen",
			"Lieven",
			"Lodeweik",
			"Lorenz",
			"Lottchen",
			"Lotte",
			"Lucian",
			"Ludwin",
			"Lukas",
			"Lusger",
			"Marten",
			"Mart",
			"Marcellus",
			"Mark",
			"Markus",
			"Marthinus",
			"Mathys",
			"Matthäus",
			"Maurits",
			"Maximian",
			"Melisendis",
			"Mewis",
			"Nazarius",
			"Neis",
			"Niklaus",
			"Nikolaus",
			"Nys",
			"Okkert",
			"Oktavia",
			"Oktavius",
			"Olaf",
			"Oskar",
			"Otho",
			"Otto",
			"Pankratius",
			"Paulchen",
			"Paulinus",
			"Paulus",
			"Peter",
			"Peterchen",
			"Preit",
			"Rainer",
			"Rainhard",
			"Reimond",
			"Reinhard",
			"Reinhold",
			"Remigius",
			"Renatus",
			"Rian",
			"Reikard",
			"Roderich",
			"Roeland",
			"Roelof",
			"Rogier",
			"Roland",
			"Rolf",
			"Roman",
			"Rombert",
			"Ropert",
			"Ruben",
			"Rüdiger",
			"Rudolf",
			"Ruprecht",
			"Rutger",
			"Rutgert",
			"Sander",
			"Severin",
			"Severus",
			"Sidonius",
			"Sigfren",
			"Sigismun",
			"Seithoff",
			"Sil",
			"Sixtus",
			"Solveig",
			"Staf",
			"Stanislaus",
			"Stefan",
			"Stoffel",
			"Sylvan",
			"Tankred",
			"Thaddäus",
			"Theobald",
			"Theodor",
			"Theodosius",
			"Theophil",
			"Theunis",
			"Tiebout",
			"Timotheus",
			"Traudel",
			"Tristan",
			"Trubert",
			"Trudi",
			"Tymen",
			"Ulrin",
			"Ulrik",
			"Ulvian",
			"Ursel",
			"Valerian",
			"Veit",
			"Velten",
			"Viktor",
			"Vinzens",
			"Wenzel",
			"Wenzelaus",
			"Wikke",
			"Wilhelm",
			"Wim",
			"Ywein",
			"Zachaus"
		],
		"female-sordolia" => [
			"Afke",
			"Ada",
			"Adride",
			"Aglaia",
			"Aïke",
			"Akke",
			"Aletta",
			"Alicia",
			"Alina",
			"Amelia",
			"Ana",
			"Anastia",
			"Andrea",
			"Aniek",
			"Anke",
			"Ann",
			"Anna",
			"Ännchen",
			"Annerl",
			"Ariana",
			"Aurelia",
			"Aurora",
			"Beatrix",
			"Benedikt",
			"Bente",
			"Berengaria",
			"Berenike",
			"Bertha",
			"Chlothilde",
			"Claudia",
			"Corene",
			"Cunegonde",
			"Domenika",
			"Dorinthe",
			"Doris",
			"Efke",
			"Eline",
			"Elisa",
			"Elisabeth",
			"Elsbet",
			"Elsie",
			"Emma",
			"Erna",
			"Eugenia",
			"Felicia",
			"Femke",
			"Fransiska",
			"Frederika",
			"Gabriela",
			"Geerta",
			"Geertruda",
			"Gerda",
			"Gertrud",
			"Ginevra",
			"Gisela",
			"Godelieve",
			"Gonda",
			"Grete",
			"Gretla",
			"Griselda",
			"Gudila",
			"Hanneke",
			"Helena",
			"Heller",
			"Hendrika",
			"Hermina",
			"Hilda",
			"Hildegard",
			"Hilke",
			"Hortensia",
			"Inge",
			"Ingrid",
			"Irena",
			"Isabella",
			"Isole",
			"Jacoba",
			"Jana",
			"Jenne",
			"Johanna",
			"Jolanda",
			"Josefa",
			"Julia",
			"Juliana",
			"Juniane",
			"Karina",
			"Karla",
			"Karola",
			"Karoline",
			"Kassandra",
			"Katharina",
			"Katlein",
			"Katrein",
			"Katryn",
			"Keten",
			"Kiana",
			"Klara",
			"Konstanze",
			"Kristien",
			"Kunegunde",
			"Laetitia",
			"Lara",
			"Laura",
			"Leen",
			"Leena",
			"Leida",
			"Lena",
			"Lenoor",
			"Leonie",
			"Lieven",
			"Lisa",
			"Lucia",
			"Luise",
			"Lydia",
			"Maicke",
			"Magda",
			"Magdaleen",
			"Mareike",
			"Mareise",
			"Margareta",
			"Margariet",
			"Margretha",
			"Margriet",
			"Maria",
			"Mariechen",
			"Marieke",
			"Mariken",
			"Mariska",
			"Marit",
			"Marja",
			"Marleen",
			"Martha",
			"Martina",
			"Matilde",
			"Maud",
			"Mechthild",
			"Minchen",
			"Minna",
			"Monika",
			"Myla",
			"Nadia",
			"Natascha",
			"Nathalia",
			"Nelleke",
			"Nida",
			"Nora",
			"Ottilie",
			"Patricia",
			"Paula",
			"Petra",
			"Petronella",
			"Pieternella",
			"Radegunde",
			"Raimunda",
			"Regina",
			"Reinhilde",
			"Renata",
			"Ria",
			"Rianne",
			"Ricarda",
			"Rika",
			"Rosa",
			"Rosalia",
			"Rosalinde",
			"Rosamund",
			"Rosi",
			"Sabina",
			"Sabinchen",
			"Sanna",
			"Sanneke",
			"Sascha",
			"Saskia",
			"Sibylla",
			"Sidonia",
			"Sien",
			"Sigrid",
			"Silke",
			"Silvia",
			"Simona",
			"Siska",
			"Sofia",
			"Sonia",
			"Susi",
			"Sybilla",
			"Theresa",
			"Thialda",
			"Tina",
			"Tineke",
			"Treina",
			"Trinchen",
			"Trine",
			"Valentyn",
			"Valeria",
			"Veronika",
			"Vinzenta",
			"Virginia",
			"Wilhelmine",
			"Zulma"
		],
		"male-french" => [
			"Alain",
			"Alexandre",
			"Anthony",
			"Antoine",
			"Arnaud",
			"Bernard",
			"Bruno",
			"Cédric",
			"Christian",
			"Christophe",
			"Claude",
			"Daniel",
			"David",
			"Didier",
			"Dominique",
			"Éric",
			"Fabrice",
			"Franck",
			"François",
			"Frédéric",
			"Gérard",
			"Gilles",
			"Guillaume",
			"Hervé",
			"Jacques",
			"Jean",
			"Jean-Pierre",
			"Jérôme",
			"Julien",
			"Kevin",
			"Laurent",
			"Marc",
			"Mathieu",
			"Maxime",
			"Michel",
			"Nicolas",
			"Olivier",
			"Pascal",
			"Patrick",
			"Patrice",
			"Paul",
			"Philippe",
			"Pierre",
			"Romain",
			"Serge",
			"Stéphane",
			"Sylvain",
			"Thierry",
			"Thomas",
			"Vincent"
		],
		"female-french" => [
			"Anne",
			"Annie",
			"Audrey",
			"Aurélie",
			"Béatrice",
			"Brigitte",
			"Camille",
			"Carole",
			"Caroline",
			"Catherine",
			"Cécile",
			"Céline",
			"Chantal",
			"Christelle",
			"Christine",
			"Claire",
			"Corinne",
			"Delphine",
			"Dominique",
			"Élisabeth",
			"Élodie",
			"Émilie",
			"Évelyne",
			"Fabienne",
			"Florence",
			"Françoise",
			"Hélène",
			"Isabelle",
			"Julie",
			"Karine",
			"Laetitia",
			"Laura",
			"Laurence",
			"Marie",
			"Marion",
			"Martine",
			"Mélanie",
			"Monique",
			"Nadine",
			"Nathalie",
			"Nicole",
			"Patricia",
			"Sandra",
			"Sandrine",
			"Sophie",
			"Stéphanie",
			"Sylvie",
			"Valérie",
			"Véronique",
			"Virginie"
		],
		"surname-french" => [
			"Adam",
			"André",
			"Antoine",
			"Arnaud",
			"Aubert",
			"Aubry",
			"Bailly",
			"Barbier",
			"Baron",
			"Barre",
			"Barthelemy",
			"Benard",
			"Benoît",
			"Berger",
			"Bernard",
			"Bertin",
			"Bertrand",
			"Besson",
			"Blanc",
			"Blanchard",
			"Bonnet",
			"Boucher",
			"Bouchet",
			"Boulanger",
			"Bourgeois",
			"Bouvier",
			"Boyer",
			"Breton",
			"Brun",
			"Brunet",
			"Carlier",
			"Caron",
			"Carpentier",
			"Carre",
			"Charles",
			"Charpentier",
			"Chauvin",
			"Chevalier",
			"Chevallier",
			"Clement",
			"Colin",
			"Collet",
			"Collin",
			"Cordier",
			"Cousin",
			"Da Silva",
			"Daniel",
			"David",
			"Delaunay",
			"Denis",
			"Deschamps",
			"Dubois",
			"Dufour",
			"Dumas",
			"Dumont",
			"Dupont",
			"Dupuis",
			"Dupuy",
			"Durand",
			"Duval",
			"Étienne",
			"Fabre",
			"Faure",
			"Fernandez",
			"Fleury",
			"Fontaine",
			"Fournier",
			"Francois",
			"Gaillard",
			"Garcia",
			"Garnier",
			"Gauthier",
			"Gautier",
			"Gay",
			"Gerard",
			"Germain",
			"Gilbert",
			"Gillet",
			"Girard",
			"Giraud",
			"Grondin",
			"Guerin",
			"Guichard",
			"Guillaume",
			"Guillot",
			"Guyot",
			"Hamon",
			"Henry",
			"Herve",
			"Hoarau",
			"Hubert",
			"Huet",
			"Humbert",
			"Jacob",
			"Jacquet",
			"Jean",
			"Joly",
			"Julien",
			"Klein",
			"Lacroix",
			"Lambert",
			"Lamy",
			"Langlois",
			"Laporte",
			"Laurent",
			"Le Gall",
			"Le Goff",
			"Le Roux",
			"Leblanc",
			"Lebrun",
			"Leclerc",
			"Leclercq",
			"Lecomte",
			"Lefebvre",
			"Lefevre",
			"Leger",
			"Legrand",
			"Lejeune",
			"Lemaire",
			"Lemaitre",
			"Lemoine",
			"Leroux",
			"Leroy",
			"Lévêque",
			"Lopez",
			"Louis",
			"Lucas",
			"Maillard",
			"Mallet",
			"Marchal",
			"Marchand",
			"Marechal",
			"Marie",
			"Martin",
			"Martinez",
			"Marty",
			"Masson",
			"Mathieu",
			"Ménard",
			"Mercier",
			"Meunier",
			"Meyer",
			"Michaud",
			"Michel",
			"Millet",
			"Monnier",
			"Moreau",
			"Morel",
			"Morin",
			"Moulin",
			"Muller",
			"Nicolas",
			"Noël",
			"Olivier",
			"Paris",
			"Pasquier",
			"Payet",
			"Pelletier",
			"Perez",
			"Perret",
			"Perrier",
			"Perrin",
			"Perrot",
			"Petit",
			"Philippe",
			"Picard",
			"Pichon",
			"Pierre",
			"Poirier",
			"Poulain",
			"Prevost",
			"Remy",
			"Renard",
			"Renaud",
			"Renault",
			"Rey",
			"Reynaud",
			"Richard",
			"Riviere",
			"Robert",
			"Robin",
			"Roche",
			"Rodriguez",
			"Roger",
			"Rolland",
			"Rousseau",
			"Roussel",
			"Roux",
			"Roy",
			"Royer",
			"Sanchez",
			"Schmitt",
			"Schneider",
			"Simon",
			"Tessier",
			"Thomas",
			"Vasseur",
			"Vidal",
			"Vincent",
			"Weber"
		],
		"male-american" => [
			"James",
			"John",
			"Robert",
			"Michael",
			"William",
			"David",
			"Richard",
			"Joseph",
			"Thomas",
			"Charles",
			"Christopher",
			"Daniel",
			"Matthew",
			"Anthony",
			"Mark",
			"Donald",
			"Steven",
			"Paul",
			"Andrew",
			"Joshua",
			"Kenneth",
			"Kevin",
			"Brian",
			"George",
			"Timothy",
			"Ronald",
			"Edward",
			"Jason",
			"Jeffrey",
			"Ryan",
			"Jacob",
			"Gary",
			"Nicholas",
			"Eric",
			"Jonathan",
			"Stephen",
			"Larry",
			"Justin",
			"Scott",
			"Brandon",
			"Benjamin",
			"Samuel",
			"Gregory",
			"Alexander",
			"Frank",
			"Patrick",
			"Raymond",
			"Jack",
			"Dennis",
			"Jerry",
			"Tyler",
			"Aaron",
			"Jose",
			"Adam",
			"Nathan",
			"Henry",
			"Douglas",
			"Zachary",
			"Peter",
			"Kyle",
			"Ethan",
			"Walter",
			"Noah",
			"Jeremy",
			"Christian",
			"Keith",
			"Roger",
			"Terry",
			"Gerald",
			"Harold",
			"Sean",
			"Austin",
			"Carl",
			"Arthur",
			"Lawrence",
			"Dylan",
			"Jesse",
			"Jordan",
			"Bryan",
			"Billy",
			"Joe",
			"Bruce",
			"Gabriel",
			"Logan",
			"Albert",
			"Willie",
			"Alan",
			"Juan",
			"Wayne",
			"Elijah",
			"Randy",
			"Roy",
			"Vincent",
			"Ralph",
			"Eugene",
			"Russell",
			"Bobby",
			"Mason",
			"Philip",
			"Louis"
		],
		"female-american" => [
			"Mary",
			"Patricia",
			"Jennifer",
			"Linda",
			"Elizabeth",
			"Barbara",
			"Susan",
			"Jessica",
			"Sarah",
			"Karen",
			"Lisa",
			"Nancy",
			"Betty",
			"Sandra",
			"Margaret",
			"Ashley",
			"Kimberly",
			"Emily",
			"Donna",
			"Michelle",
			"Carol",
			"Amanda",
			"Dorothy",
			"Melissa",
			"Deborah",
			"Stephanie",
			"Rebecca",
			"Sharon",
			"Laura",
			"Cynthia",
			"Kathleen",
			"Amy",
			"Angela",
			"Shirley",
			"Anna",
			"Ruth",
			"Brenda",
			"Pamela",
			"Nicole",
			"Katherine",
			"Samantha",
			"Christine",
			"Catherine",
			"Virginia",
			"Debra",
			"Rachel",
			"Janet",
			"Emma",
			"Carolyn",
			"Maria",
			"Heather",
			"Diane",
			"Julie",
			"Joyce",
			"Evelyn",
			"Joan",
			"Victoria",
			"Kelly",
			"Christina",
			"Lauren",
			"Frances",
			"Martha",
			"Judith",
			"Cheryl",
			"Megan",
			"Andrea",
			"Olivia",
			"Ann",
			"Jean",
			"Alice",
			"Jacqueline",
			"Hannah",
			"Doris",
			"Kathryn",
			"Gloria",
			"Teresa",
			"Sara",
			"Janice",
			"Marie",
			"Julia",
			"Grace",
			"Judy",
			"Theresa",
			"Madison",
			"Beverly",
			"Denise",
			"Marilyn",
			"Amber",
			"Danielle",
			"Rose",
			"Brittany",
			"Diana",
			"Abigail",
			"Natalie",
			"Jane",
			"Lori",
			"Alexis",
			"Tiffany",
			"Kayla"
		],
		"surname-american" => [
			"Smith",
			"Johnson",
			"Williams",
			"Brown",
			"Jones",
			"Garcia",
			"Miller",
			"Davis",
			"Rodriguez",
			"Martinez",
			"Hernandez",
			"Lopez",
			"Gonzalez",
			"Wilson",
			"Anderson",
			"Thomas",
			"Taylor",
			"Moore",
			"Jackson",
			"Martin",
			"Lee",
			"Perez",
			"Thompson",
			"White",
			"Harris",
			"Sanchez",
			"Clark",
			"Ramirez",
			"Lewis",
			"Robinson",
			"Walker",
			"Young",
			"Allen",
			"King",
			"Wright",
			"Scott",
			"Torres",
			"Nguyen",
			"Hill",
			"Flores",
			"Green",
			"Adams",
			"Nelson",
			"Baker",
			"Hall",
			"Rivera",
			"Campbell",
			"Mitchell",
			"Carter",
			"Roberts",
			"Gomez",
			"Phillips",
			"Evans",
			"Turner",
			"Diaz",
			"Parker",
			"Cruz",
			"Edwards",
			"Collins",
			"Reyes",
			"Stewart",
			"Morris",
			"Morales",
			"Murphy",
			"Cook",
			"Rogers",
			"Gutierrez",
			"Ortiz",
			"Morgan",
			"Cooper",
			"Peterson",
			"Bailey",
			"Reed",
			"Kelly",
			"Howard",
			"Ramos",
			"Kim",
			"Cox",
			"Ward",
			"Richardson",
			"Watson",
			"Brooks",
			"Chavez",
			"Wood",
			"James",
			"Bennett",
			"Gray",
			"Mendoza",
			"Ruiz",
			"Hughes",
			"Price",
			"Alvarez",
			"Castillo",
			"Sanders",
			"Patel",
			"Myers",
			"Long",
			"Ross",
			"Foster",
			"Jimenez"
		],
		"male-taol-kaer" => [
			"Aessan",
			"Alban",
			"Algwich",
			"Arenthel",
			"Baorìg",
			"Braeden",
			"Branfubh",
			"Braonan",
			"Boadach",
			"Caemgen",
			"Cahir",
			"Calvhag",
			"Dalaigh",
			"Deorn",
			"Doern",
			"Ean",
			"Erald",
			"Erwan",
			"Fanch",
			"Goater",
			"Harald",
			"Herven",
			"Irvan",
			"Irwin",
			"Jaeron",
			"Jobenn",
			"Jos",
			"Keogh",
			"Liam",
			"Loeg",
			"Manec",
			"Maorn",
			"Meog",
			"Mòr",
			"Naelen",
			"Nar",
			"Octar",
			"Osvan",
			"Tadh",
			"Teren",
			"Vaugh",
			"Venec",
			"Wylard"
		],
		"female-taol-kaer" => [
			"Aïnlis",
			"Arven",
			"Aslin",
			"Aylin",
			"Ailis",
			"Alanagh",
			"Aoibheann",
			"Avelin",
			"Brigh",
			"Caytlin",
			"Ceyla",
			"Cyàn",
			"Deilen",
			"Dyànair",
			"Édel",
			"Édena",
			"Ghilair",
			"Glen",
			"Jili",
			"Maella",
			"Maiwenn",
			"Maoda",
			"Neala",
			"Neamis",
			"Rodina",
			"Thailis",
			"Wailen",
			"Yldiane",
			"Yvine",
			"Zaig"
		],
		"male-lauria" => [
			"Abercius",
			"Aegisthos",
			"Aegon",
			"Aétion",
			"Aetius",
			"Agabos",
			"Agapenor",
			"Agénor",
			"Alector",
			"Alkeon",
			"Aristonis",
			"Athenios",
			"Calystron",
			"Cleonides",
			"Damianos",
			"Demetrios",
			"Dorianos",
			"Éaque",
			"Erythion",
			"Erythios",
			"Eryxion",
			"Éthlios",
			"Eudor",
			"Galenios",
			"Galenor",
			"Heliodor",
			"Herakion",
			"Iasonis",
			"Jurgos",
			"Kallion",
			"Kallistos",
			"Kyrios",
			"Leontios",
			"Lysandor",
			"Lysimachos",
			"Melanthor",
			"Myronides",
			"Myronis",
			"Nikandros",
			"Phaedron",
			"Phaedros",
			"Philemonis",
			"Phrixos",
			"Pyrrhos",
			"Pythion",
			"Selenios",
			"Thalassios",
			"Thalios",
			"Thalios",
			"Theonides",
			"Theronides",
			"Thesandor",
			"Thesandros",
			"Timaeos",
			"Xanthios",
			"Xenandros",
			"Yanis",
			"Zenos",
			"Zephyron",
			"Zephyros"
		],
		"female-lauria" => [
			"Acidine",
			"Adamantia",
			"Adrastée",
			"Aegina",
			"Aegistha",
			"Agathonice",
			"Agnodice",
			"Agrippia",
			"Alectra",
			"Alkeia",
			"Ananie",
			"Aristonis",
			"Athanasia",
			"Athenia",
			"Calysta",
			"Cleonida",
			"Damiana",
			"Demetra",
			"Doriana",
			"Églée",
			"Erythia",
			"Erythina",
			"Eryxia",
			"Eudora",
			"Galena",
			"Galenia",
			"Heliodora",
			"Herakia",
			"Iasona",
			"Kallia",
			"Kallista",
			"Kyria",
			"Leontia",
			"Lysandra",
			"Lysimacha",
			"Melantha",
			"Myrina",
			"Myrinia",
			"Nikandra",
			"Phaedra",
			"Phaedra",
			"Philema",
			"Phrixa",
			"Pyrrha",
			"Pythia",
			"Selenia",
			"Thalassa",
			"Thalia",
			"Thalia",
			"Theonida",
			"Theronida",
			"Thesandra",
			"Timaea",
			"Xanthia",
			"Xenandra",
			"Zena",
			"Zephyra"
		],
	];

	// weight array name must be w-gender-region-profile
	// one or two parameters can be ommitted (e.g. w-region-profile or w-region) but always in the same order
	// if no weight array matches the parameters, it will select w-default
	// see weightArraySelector for priorities

	const hairLength = [
		"value" => ["très longs", "longs", "mi-longs", "courts", "très courts", "rasés"],
		"w-default" => [0, 1, 2, 4, 4, 1],
		"w-female" => [1, 8, 8, 1, 0, 0],
		"w-male-sordolia" => [0, 1, 3, 1, 1, 1],
	];

	const hairType = [
		"value" => ["frisés", "bouclés", "ondulés", "raides"],
		"w-default" => [1, 2, 3, 4],
		"w-taol-kaer" => [0, 1, 2, 4],
		"w-sordolia" => [0, 1, 2, 4],
	];

	const hairColor = [
		"value" => ["noirs", "bruns", "chatains", "chatains clairs", "blonds", "roux"],
		"w-default" => [2, 4, 4, 4, 4, 1],
		"w-artaille" => [8, 8, 2, 1, 1, 1],
		"w-sordolia" => [1, 1, 1, 4, 8, 1],
		"w-lauria" => [8, 3, 1, 1, 0, 0],
		"w-french" => [4, 8, 8, 6, 2, 1],
		"w-taol-kaer" => [1, 1, 2, 4, 4, 2],
	];

	const facialHair = [
		"value" => ["glabre", "moustaches", "bouc", "barbe taillée", "barbe broussailleuse", "grande barbe", "fantaisiste"],
		"w-default" => [10, 2, 3, 6, 3, 2, 1],
		"w-sordolia" => [1, 1, 0, 2, 2, 2, 0],
	];

	const eyes = [
		"value" => ["foncés", "gris", "brun-vert", "bruns", "verts", "bleu-vert", "bleus"],
		"w-default" => [15, 3, 9, 15, 6, 6, 6],
		"w-artaille" => [15, 1, 9, 25, 3, 3, 2],
		"w-sordolia" => [1, 2, 3, 1, 2, 4, 4],
		"w-taol-kaer" => [1, 1, 2, 2, 3, 3, 3],
	];

	const corpulence = [
		"value" => ["maigre", "mince", "moyenne", "léger embonpoint", "gros(se)", "obèse", "athlétique", "barraqué", "armoire à glace",],
		"w-default" => [2, 6, 12, 6, 4, 1, 2, 0, 0],
		"w-female" => [2, 6, 12, 6, 4, 1, 1, 0, 0],
		"w-male-warrior" => [0, 2, 6, 3, 1, 0, 6, 3, 2],
	];

	const size = [
		"value" => ["petite taille", "assez petite taille", "moyenne", "assez grande taille", "grand taille", "très grand(e)"],
		"w-default" => [1, 3, 6, 3, 2, 1],
		"w-warrior" => [0, 1, 4, 4, 3, 2],
		"w-sordolia" => [0, 1, 4, 4, 3, 2],
		"w-sordolia-warrior" => [0, 0, 2, 4, 4, 3],
	];

	const beauty = [
		"value" => ["laid", "pas très beau", "apparence moyenne", "apparence agréable", "beau", "très beau"],
		"w-default" => [1, 6, 12, 6, 4, 1],
	];

	const intelligence = [
		"value" => ["pas fûté", "intelligence moyenne", "assez intelligent", "intelligence vive"],
		"w-default" => [1, 10, 3, 1],
		"w-warrior" => [1, 5, 1, 0],
	];

	const social = [
		"value" => ["brute", "désagréable", "condescendant(e)", "attitude distante", "attitude plutôt agréable", "assez jovial", "sympathique", "chaleureux"],
		"w-default" => [1, 2, 1, 5, 5, 2, 2, 1],
		"w-warrior" => [2, 2, 2, 2, 1, 0, 0, 0],
	];

	const specialTraits = [
		"value" => ["pommettes saillantes", "visage anguleux", "boîteux", "borgne", "marque de naissance au visage", "yeux vairrons", "sourcils épais", "voix rauque", "voix agréable", "cicatrice(s)", "tatouages", "dents proéminentes", "tâches de rousseur", "démarche gracieuse", "mèches rebelles",],
		"w-default" => [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		"w-warrior" => [2, 2, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 1, 0, 1],
	];

	public static function weightArraySelector(array $trait, array $parameters): array
	{
		$gender = $parameters["gender"];
		$region = $parameters["region"];
		$profile = $parameters["profile"];

		$weightNames = [
			"w-" . $gender . "-" . $region . "-" . $profile,
			"w-" . $gender . "-" . $region,
			"w-" . $gender . "-" . $profile,
			"w-" . $region . "-" . $profile,
			"w-" . $profile,
			"w-" . $region,
			"w-" . $gender,
		];

		foreach ($weightNames as $weightName) if (isset($trait[$weightName])) return $trait[$weightName];
		return $trait["w-default"];
	}

	public static function generateNPC(array $parameters)
	{
		$gender = $parameters["gender"] ?? "male";
		$region = $parameters["region"] ?? "artaille";
		$profile = $parameters["profile"] ?? "standard";
		$name_only = isset($parameters["name-only"]);

		// selecting weight arrays
		if (!$name_only) {
			$parameters = ["gender" => $gender, "region" => $region, "profile" => $profile];
			$w_hair_length = self::weightArraySelector(self::hairLength, $parameters);
			$w_hair_type = self::weightArraySelector(self::hairType, $parameters);
			$w_hair_color = self::weightArraySelector(self::hairColor, $parameters);
			$w_facial_hair = self::weightArraySelector(self::facialHair, $parameters);
			$w_eyes = self::weightArraySelector(self::eyes, $parameters);
			$w_corpulence = self::weightArraySelector(self::corpulence, $parameters);
			$w_size = self::weightArraySelector(self::size, $parameters);
			$w_beauty = self::weightArraySelector(self::beauty, $parameters);
			$w_intelligence = self::weightArraySelector(self::intelligence, $parameters);
			$w_social = self::weightArraySelector(self::social, $parameters);
			$w_special_traits = self::weightArraySelector(self::specialTraits, $parameters);
		}

		// generating name
		$parameters["name"] = "Table de noms manquante";
		if (isset(self::names[$gender . "-" . $region])) {
			$parameters["name"] = TableReader::pickRandomArrayElements(self::names[$gender . "-" . $region])[0];
		}
		if (isset(self::names["surname-" . $region])) {
			$surname = TableReader::pickRandomArrayElements(self::names["surname-" . $region])[0];
			$parameters["name"] .= (" " . $surname);
		}

		if ($name_only) return $parameters;

		// generating hair description
		$hair_length = TableReader::getWeightedResult(self::hairLength["value"], $w_hair_length);
		$parameters["hair"] = "cheveux " . $hair_length;
		if (!in_array($hair_length, ["courts", "très courts", "rasés"])) {
			$hair_type = TableReader::getWeightedResult(self::hairType["value"], $w_hair_type);
			$parameters["hair"] .= (" " . $hair_type);
		}
		if ($hair_length !== "rasés") {
			$hair_color = TableReader::getWeightedResult(self::hairColor["value"], $w_hair_color);
			$parameters["hair"] .= (" " . $hair_color);
		}

		// generating regular entries
		if ($gender === "male") $parameters["facialHair"] = TableReader::getWeightedResult(self::facialHair["value"], $w_facial_hair);
		$parameters["eyes"] = TableReader::getWeightedResult(self::eyes["value"], $w_eyes);
		$parameters["corpulence"] = TableReader::getWeightedResult(self::corpulence["value"], $w_corpulence);
		$parameters["size"] = TableReader::getWeightedResult(self::size["value"], $w_size);
		$parameters["beauty"] = TableReader::getWeightedResult(self::beauty["value"], $w_beauty);
		$parameters["intelligence"] = TableReader::getWeightedResult(self::intelligence["value"], $w_intelligence);
		$parameters["social"] = TableReader::getWeightedResult(self::social["value"], $w_social);

		// special traits
		$special_trait_random = random_int(1, 100);
		if ($special_trait_random <= 30) {
			$parameters["specialTraits"] = [];
			//$trait_number = ceil($special_trait_random/10);
			$trait_number = 3;
			for ($i = 0; $i < $trait_number; $i++) {
				$selected_trait = TableReader::getWeightedResult(self::specialTraits["value"], $w_special_traits);
				while (in_array($selected_trait, $parameters["specialTraits"])) {
					$selected_trait = TableReader::getWeightedResult(self::specialTraits["value"], $w_special_traits);
				}
				$parameters["specialTraits"][] = $selected_trait;
			}
			$parameters["specialTraits"] = join(", ", $parameters["specialTraits"]);
		}

		return $parameters;
	}
};
