(()=>{"use strict";var __webpack_modules__={771:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function qs(e){return document.querySelector(e)}function qsa(e){return document.querySelectorAll(e)}function ce(e,t=[]){let a=document.createElement(e);return t&&t.forEach((e=>{a.classList.add(e)})),a}function checkPasswordStrength(e){const t=/\d+/.test(e),a=e.length>=8,n=/\W+/.test(e),r=/\s+/.test(e),s=/[A-Z]/.test(e),o=/[a-z]/.test(e);return t&&a&&n&&!r&&s&&o}function calculate(str){if(null===str)return"";let result;str=str.replace(/[+-]+$/g,""),str=str.replace(/[^-\(\)\d/\*+\.]/g,"");try{result=eval(str)}catch(e){result=""}return result=void 0===result?"":result,result}function int(e){return isNaN(parseInt(e))?0:parseInt(e)}function coarseRound(e){let t=!1;return e<0&&(e*=-1,t=!0),e=e<50?Math.round(e):e<200?5*Math.round(e/5):e<500?10*Math.round(e/10):e<2e3?50*Math.round(e/50):100*Math.round(e/100),t&&(e*=-1),e}function trimModifier(e){return(e=e.replace(/\([+-]\d+\)$/g,"")).trimEnd()}function explicitSign(e){return e>0?`+${e}`:`${e}`}function getInnerText(e){return(new DOMParser).parseFromString(e,"text/html").body.textContent||""}__webpack_require__.d(__webpack_exports__,{Ie:()=>explicitSign,Kf:()=>calculate,ce:()=>ce,e$:()=>int,qs:()=>qs,uJ:()=>qsa})}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var a=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](a,a.exports,__webpack_require__),a.exports}__webpack_require__.d=(e,t)=>{for(var a in t)__webpack_require__.o(t,a)&&!__webpack_require__.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var __webpack_exports__={};(()=>{var e=__webpack_require__(771);function t(e){let t,a,n,r,s=0,o=/^(\d+)d(\d{0,3})([+-/*]*)([0-9\.]+)*/.exec(e);if(null===o)s=isNaN(parseInt(e))?0:parseInt(e),t=0,a="",n="+",r=s;else if(t=parseInt(o[1]),a=""!=o[2]?parseInt(o[2]):6,n=""!=o[3]?o[3]:"+",r=null!=o[4]&&""!=o[4]?parseFloat(o[4]):0,1===t&&6===a&&"-"===n&&2===r)s=Math.floor(5*Math.random());else if(1===t&&6===a&&"-"===n&&3===r)s=Math.floor(4*Math.random());else if(1===t&&6===a&&"-"===n&&4===r)s=Math.floor(3*Math.random());else if(1===t&&6===a&&"-"===n&&r<=5)s=Math.floor(2*Math.random());else{for(let e=0;e<t;e++)s+=Math.floor(Math.random()*a)+1;switch(n){case"+":s+=r;break;case"-":s-=r;break;case"*":s*=r;break;case"/":s/=r}}let l=`${t}d${6===a?"":a}${n}${r}`;return l=l.replace("+0",""),l=l.replace("-0",""),{expression:l,result:s}}async function a(){let e=new FormData;return e.append("roll",t("3d").result),await fetch("/api/localisation-table",{method:"post",body:e}).then((e=>e.json())).then((e=>e.data))}async function n(e,t,a){if(parseInt(e)&&t){let n="B."+t,r=new FormData;return r.append("for",e),r.append("notes",n),r.append("mains",a),fetch("/api/weapon-damages",{method:"post",body:r}).then((e=>e.json())).then((e=>e.data.damages.slice(2)))}}function r(e,t){const a=e-t;let n=0;18===t?n=-1:17===t?n=e>=16?0:-1:4===t?n=e<=5?0:1:3===t?n=1:a<=-10?n=-1:a>=10&&t<=7&&(n=1);let r=a>=0?"ðŸŸ¢":"ðŸ”´";return-1===n&&(r="ðŸ˜–"),1===n&&(r="ðŸ˜Ž"),{MR:a,symbol:r,critical:n}}async function s(e,t){return fetch(e,{method:"post",body:t}).then((e=>e.json())).then((e=>e.data))}class o{static mountNewOpponent(t){const a=t[t.length-1],n=(0,e.e$)(a.dataset.opponent),r=new o(a.cloneNode(!0));r.setNumber(n+1),r.mount(a),r.reset()}static unmountLastOpponent(e){new o(e[e.length-1]).unmount()}constructor(t){this.opponentProps=["name","category","dex","san","pain-resistance","pdvm","pdv","members"],this.opponentSelects=(0,e.uJ)("[name=opponent-selector]"),this.wrapper=t,this.number=t.dataset.opponent,this.opponentProps.forEach((e=>this[e]=this.wrapper.querySelector(`[name=${e}]`)))}importFromLocalStorage(){const e=localStorage.getItem(`opponent-${this.number}`);if(e){const t=JSON.parse(e);this.opponentProps.forEach((e=>this[e].value=t[e]))}}save(){const e={};this.opponentProps.forEach((t=>e[t]=this[t].value)),localStorage.setItem(`opponent-${this.number}`,JSON.stringify(e))}reset(){this.opponentProps.forEach((e=>this[e].value="")),this.category.value="std",localStorage.removeItem(`opponent-${this.number}`)}addToOpponentSelectors(){this.opponentSelects.forEach((t=>{const a=(0,e.ce)("option");a.value=this.number,a.innerText=""!==this.name.value?this.name.value:`Protagoniste ${this.number}`,t.appendChild(a)}))}updateNameInOpponentSelectors(){this.opponentSelects.forEach((e=>{e.options[this.number-1].innerText=""!==this.name.value?this.name.value:`Protagoniste ${this.number}`}))}setReactivity(){this.importFromLocalStorage(),this.addToOpponentSelectors(),this.wrapper.addEventListener("keyup",(e=>{"name"===e.target.name&&""===e.target.value?this.reset():this.save()})),this.category.addEventListener("change",(e=>this.save())),this.name.addEventListener("keyup",(e=>this.updateNameInOpponentSelectors())),this.name.dispatchEvent(new Event("keyup")),this.pdvm.addEventListener("blur",(e=>{""===this.pdv.value&&(this.pdv.value=this.pdvm.value)})),this.pdv.addEventListener("blur",(t=>{this.pdv.value=(0,e.Kf)(this.pdv.value),this.save()}))}setNumber(e){this.number=e,this.wrapper.dataset.opponent=e,this.wrapper.querySelector("[data-role=opponent-number]").innerText=e}mount(e){this.wrapper.classList.add("mt-Â½"),e.parentNode.insertBefore(this.wrapper,e.nextSibling),this.setReactivity()}unmount(){localStorage.removeItem(`opponent-${this.number}`),this.wrapper.remove(),this.opponentSelects.forEach((e=>e.children[this.number-1].remove()))}}function l(a,n,s){const o={};if(o.name=a.querySelector("[data-type=skill-name]"),o.number=o.name.dataset.skillNumber,o.score=a.querySelector("[data-type=score]"),o.modifier=a.querySelector("[data-type=modif]"),localStorage.getItem(`skill-${o.number}`)){const e=JSON.parse(localStorage.getItem(`skill-${o.number}`));o.name.value=e.name,o.score.value=e.score}["keyup","change"].forEach((e=>{a.addEventListener(e,(e=>{if(""===o.name.value)o.score.value="",localStorage.removeItem(`skill-${o.number}`);else{const e={name:o.name.value,score:o.score.value};localStorage.setItem(`skill-${o.number}`,JSON.stringify(e))}}))})),a.addEventListener("submit",(a=>{if(isNaN(parseInt(o.score.value))||""===o.name.value)return;const l=(0,e.e$)(o.modifier.value),c=(0,e.e$)(o.score.value)+l,i=t("3d").result,d=r(c,i),p=0===l?"":(0,e.Ie)(l);n.value+=`${o.name.value} (${o.score.value}${p}) â†’ ${i} (MR ${d.MR} ${d.symbol})`,s("chat-roll",d.symbol)}))}window.location.hostname;class c{constructor(e,t,a,n,r=[],s=null){this.sender=parseInt(e),this.key=t,this.type=a,this.timestamp=Date.now(),this.content=n,this.recipients=r,this.label=s}stringify(){return JSON.stringify(this)}}async function i(n,s=null){const o=window.chat.inputEntry,l=window.chat.id,i=window.chat.key,d=window.chat.ws,p=/^\/(\d+,){0,10}\d+/.exec(o.value);let u=[];p&&(u=p[0].substring(1).split(","),u=u.map((e=>parseInt(e))),o.value=o.value.replace(p[0],"").trim());const m=o.value.match(/#\d{1,2}([+-]\d{1,2})?(?=\s|$)/g),h=o.value.match(/#(\d+)d(\d{0,3})([+-/*]*)([0-9\.]+)*/g),v=o.value.match(/D(\d+)d(\d{0,3})([+-/*]*)([0-9\.]+)*/g);if(m){const a=[];m.forEach((e=>{a.push(e.replace("#",""))})),a.forEach((n=>{const l=t("3d").result,c=r((0,e.Kf)(n),l),i=`[ ${n} â†’ ${l} (MR ${c.MR} ${c.symbol}) ]`;o.value=o.value.replace(`#${n}`,i),1===a.length&&null===h&&(s=c.symbol)}))}if(h){const e=[];h.forEach((t=>{e.push(t.replace("#",""))})),e.forEach((e=>{const a=`[ ${e} â†’ ${t(e).result} ]`;o.value=o.value.replace(`#${e}`,a)}))}if(v){const e=[];v.forEach((t=>{e.push(t.replace("D",""))}));const n=e.map((async e=>{const n=`[ ${e} â†’ ${t(e).result} â€“ ${(await a())[1]} ]`;o.value=o.value.replace(`D${e}`,n)}));await Promise.all(n)}(m||h||v)&&(n="chat-roll");const b=new c(l,i,n,o.value,u,s);d.send(b.stringify()),o.value=""}const d=(0,e.qs)("#msg-input"),p=(0,e.uJ)("fieldset[data-name]"),u=(0,e.uJ)("#widgets-container form");let m=(0,e.uJ)("[data-role=opponent-wrapper]"),h=(0,e.uJ)("[data-name=score-tester] form");const v=(0,e.qs)("[data-name=simple-roll] form"),b=(0,e.qs)("[data-name=round-counter] form"),y=(0,e.qs)("[data-name=widget-reaction] form"),g=(0,e.qs)("[data-name=widget-damage-location] form"),f=(0,e.qs)("[data-name=wound-effect] form"),$=(0,e.qs)("[data-name=widget-criticals] form"),w=(0,e.qs)("[data-name=widget-burst] form"),_=(0,e.qs)("#general-state-widget"),q=(0,e.qs)(["[data-name=fright-check] form"]),S=(0,e.qs)(["[data-name=explosion-widget] form"]),E=(0,e.qs)("#object-damages-widget"),k=(0,e.qs)("#vehicle-collision-widget"),L=(0,e.qs)("[data-name=npc-generator] form"),x=g.querySelector("[data-type=strength]"),N=g.querySelector("[data-type=weapon-code]"),I=g.querySelector("[data-type=hands]"),M=g.querySelector("[data-type=dice-code]"),j=f.querySelector("[data-type=dmg-type]"),D=f.querySelector("[data-type=bullet-type]"),O=(0,e.qs)("[data-type=object-damages-object-type]"),J=(0,e.qs)("[data-type=object-damages-localisation-options]");u.forEach((e=>{e.addEventListener("submit",(e=>{e.preventDefault()}))})),m.forEach((e=>{(e=new o(e)).setReactivity()})),(0,e.uJ)("[data-role=set-opponent-number]").forEach((t=>{t.addEventListener("click",(()=>{1===(0,e.e$)(t.value)?o.mountNewOpponent(m):m.length>1&&o.unmountLastOpponent(m),m=(0,e.uJ)("[data-role=opponent-wrapper]")}))})),h.forEach((e=>l(e,d,i))),(0,e.uJ)("[data-role=set-score-number]").forEach((t=>{t.addEventListener("click",(()=>{1===(0,e.e$)(t.value)?function(t,a,n){const r=t[t.length-1],s=(0,e.e$)(r.querySelector("[data-skill-number]").dataset.skillNumber),o=r.cloneNode(!0);o.querySelector("[data-skill-number]").dataset.skillNumber=s+1,r.parentElement.appendChild(o),o.addEventListener("submit",(e=>e.preventDefault())),l(o,a,n)}(h,d,i):h.length>1&&function(t){const a=t[t.length-1],n=(0,e.e$)(a.querySelector("[data-skill-number]").dataset.skillNumber);a.remove(),localStorage.removeItem(`skill-${n}`)}(h),h=(0,e.uJ)("[data-name=score-tester] form")}))})),v.addEventListener("submit",(e=>{const a=t(v.querySelector("[name=dice-expression]").value);d.value+=`${a.expression} â†’ ${a.result}`,i("chat-roll")})),b.addEventListener("submit",(t=>{t.preventDefault();const a=b.querySelector("[data-type=round-number]"),n=(0,e.e$)(a.value),r=b.querySelector("[data-type=initiative-order]").value,s=m.length;let o=r.match(/\d+/g);o=o||[],o=o.map(Number),o=o.filter((e=>e<=s&&e>=1&&Number.isInteger(e)));const l=o.map((e=>m[e-1].querySelector("[name=name]").value||`Protagoniste ${e}`));l.length?d.value+=`*Round ${n}* â€“ ${l.join(", ")}`:d.value+="EntrÃ©es incohÃ©rentes",i("chat-message"),l.length&&(a.value=n+1)})),y.addEventListener("submit",(async a=>{const n=(0,e.e$)(y.querySelector("[data-type=reaction-modifier]").value),r=t("1d").result+n;let o=new FormData;o.append("reaction-test",r);let l=await s("/api/reaction-test",o);d.value+=`Jet de rÃ©action (${r}) â†’ ${l}`,i("chat-roll")})),x.addEventListener("keyup",(async e=>{const t=await n(x.value,N.value,I.value);void 0!==t&&(M.value=t)})),N.addEventListener("keyup",(async e=>{const t=await n(x.value,N.value,I.value);void 0!==t&&(M.value=t)})),I.addEventListener("change",(async e=>{const t=await n(x.value,N.value,I.value);void 0!==t&&(M.value=t)})),g.addEventListener("submit",(async e=>{const n=t(M.value),r=await a();f.querySelector("[data-type=raw-dmg]").value=n.result,f.querySelector("[data-type=localisation]").value=r[1],d.value+=`DÃ©gÃ¢ts (${n.expression})&nbsp;: ${n.result} â€“ ${r[0]}`,i("chat-roll")})),$.addEventListener("submit",(async e=>{const a=$.querySelector("[data-type=critical-categories]").value;let n=new FormData;n.append("table",a),n.append("roll-3d",t("3d").result),n.append("roll-1d",t("1d").result);const r=await s("/api/critical-tables",n);d.value+=`${r}`,i("chat-roll")})),w.addEventListener("submit",(async e=>{const n=w.querySelector("[data-type=rcl]").value,r=w.querySelector("[data-type=fired-bullets]").value,s=w.querySelector("[data-type=mr]").value,o=w.querySelector("[data-type=damage-dices]").value;let l=new FormData;l.append("rcl",n),l.append("bullets",r),l.append("mr",s);const c=await fetch("/api/burst-hits",{method:"post",body:l}).then((e=>e.json())).then((e=>e.data));let p=[];for(let e=0;e<c;e++){const e=t(o).result,n=await a();p.push(`${e} â€“ ${n}`)}let u=`<b>Rafale&nbsp;:</b> Rcl ${n} â€“ Balles ${r} â€“ MR ${s}`;p.forEach(((e,t)=>{u+=`<br><b>${t+1}.</b> ${e}`})),d.value+=u,i("chat-roll")})),_.addEventListener("submit",(async e=>{const t=_.querySelector("[name=opponent-selector]").value,a=new o(m[t-1]),n=new FormData;n.append("san",a.san.value),n.append("pdvm",a.pdvm.value),n.append("pdv",a.pdv.value),n.append("pain-resistance",a["pain-resistance"].value),n.append("members",a.members.value);const r=await s("/api/general-state",n);console.log(r.test);let l=`Ã‰tat gÃ©nÃ©ral de <b>${a.name.value||"Protagoniste "+a.number}</b><br>${r.general}`;if(void 0!==r.members)for(const[e,t]of Object.entries(r.members))l+=`<br>${e}&nbsp;: ${t}`;d.value+=l,i("chat-roll")})),f.addEventListener("submit",(async e=>{const a=f.querySelector("[name=opponent-selector]").value,n=new o(m[a-1]),r=t(f.querySelector("[data-type=raw-dmg]").value).result,l=f.querySelector("[data-type=rd]").value,c=f.querySelector("[data-type=dmg-type]").value,p=f.querySelector("[data-type=bullet-type]").value,u=f.querySelector("[data-type=localisation]").value,h=[];for(let e=0;e<7;e++)h.push(t("3d").result);const v=new FormData;v.append("category",n.category.value),v.append("dex",n.dex.value),v.append("san",n.san.value),v.append("pdvm",n.pdvm.value),v.append("pdv",n.pdv.value),v.append("pain-resistance",n["pain-resistance"].value),v.append("raw-dmg",r||0),v.append("rd",l||0),v.append("dmg-type",c),v.append("bullet-type",p),v.append("localisation",u),v.append("rolls",h);const b=await s("/api/wound-effects",v);if(b.erreur)return d.value+="Data opposants manquantes",void i("chat-roll");let y=`<b>${n.name.value||"Protagoniste "+n.number} â€“ ${b["dÃ©gÃ¢ts bruts"]} ( ${b["type dÃ©gÃ¢ts"]} ${b.localisation})</b>`,g=!0;y+=`<br>DÃ©gÃ¢ts effectifs&nbsp;: ${b["dÃ©gÃ¢ts effectifs"]}`,b.recul&&(y+=`<br>Recul de ${b.recul}&nbsp;m.`),b.mort&&(y+=`<br>${b.mort}`,g=!1),g&&(b["autres effets"]&&(y+=`<br>${b["autres effets"]}`),b["sonnÃ©"]&&!b["perte de conscience"]&&(y+=`<br>${b["sonnÃ©"]}`),b["perte de conscience"]&&(y+="<br>Le personnage perd conscience."),b.chute&&!b["perte de conscience"]&&(y+="<br>Le personnage chÃ»te."),b["dÃ©gÃ¢ts membre"]&&(y+=`<br>${b["dÃ©gÃ¢ts membre"]}`,""!==b["Ã©tat membre"]&&(y+=` (${b["Ã©tat membre"]})`))),d.value+=y,i("chat-roll"),n.pdv.value=b.pdv})),j.addEventListener("change",(e=>{["b0","b1","b2","b3"].includes(j.value)?D.disabled=!1:(D.value="std",D.disabled=!0)})),q.addEventListener("submit",(async a=>{const n=q.querySelector(["[data-type=fright-level]"]).value,o=(0,e.e$)(q.querySelector(["[data-type=sf-score]"]).value),l=(0,e.e$)(q.querySelector(["[data-type=sf-modif]"]).value),c=(0,e.e$)(q.querySelector(["[data-type=san-score]"]).value),p=o+l;if(o<=0||c<=0&&n>=5)return void a.preventDefault();const u=new FormData,m=r(p,t("3d").result),h=[];for(let e=0;e<=6;e++)h.push(t("3d").result);u.append("fright-level",n),u.append("sf-score",o),u.append("san-score",c),u.append("frightcheck-MR",m.MR),u.append("frightcheck-symbol",m.symbol),u.append("frightcheck-critical",m.critical),u.append("rolls",h.join(","));let v=await s("/api/fright-check",u);d.value=v,i("chat-roll",m.symbol)})),S.addEventListener("submit",(a=>{const n=(0,e.qs)("[data-type=explosion-dmg]").value,r=(0,e.qs)("[data-type=explosion-distance]").value,s=(0,e.qs)("[data-type=explosion-frag-surface]").value,o=(0,e.qs)("[data-type=explosion-frag-device]").checked,l=(t(n).result+t(n).result+t(n).result)/3*1.43,c=new FormData;c.append("damages",l),c.append("distance",r),c.append("fragmentation-surface",s),c.append("is-fragmentation-device",o),fetch("/api/explosion-damages",{method:"post",body:c}).then((e=>e.json())).then((e=>{const t=e.data,a=`<b>Explosion&nbsp;:</b> dÃ©gÃ¢ts ${t.damages} â€“ fragment(s) ${t.fragments} â€“ hauteur de chute ${t.height}&nbsp;m`;d.value+=a,i("chat-roll")}))})),O.addEventListener("change",(t=>{const a=new FormData;a.append("object-type",O.value),fetch("/api/object-localisation-options",{method:"post",body:a}).then((e=>e.json())).then((t=>{J.innerHTML="",t.data.forEach((t=>{t=t.charAt(0).toUpperCase()+t.slice(1);const a=(0,e.ce)("option");a.innerText=t,J.appendChild(a)}))}))})),E.addEventListener("submit",(a=>{const n=(0,e.qs)("[data-type=object-damages-pdsm]").value,r=(0,e.qs)("[data-type=object-damages-pds]").value,s=(0,e.qs)("[data-type=object-damages-integrite]").value,o=(0,e.qs)("[data-type=object-damages-rd]").value,l=t((0,e.qs)("[data-type=object-damages-damages-code]").value).result;if(isNaN(parseInt(n))||isNaN(parseInt(s))||isNaN(parseInt(l)))return;const c=new FormData;c.append("pdsm",n),c.append("pds",r),c.append("integrite",s),c.append("rd",o),c.append("dmgValue",l),c.append("dmgType",(0,e.qs)("[data-type=object-damages-damages-type]").value),c.append("objectType",O.value),c.append("localisation",J.value),c.append("rolls",[t("3d").result,t("3d").result,t("3d").result,t("3d").result]),fetch("/api/object-damages-effects",{method:"post",body:c}).then((e=>e.json())).then((t=>{const a=t.data;console.log(a),(0,e.qs)("[data-type=object-damages-pds]").value=a.pds;let n=`\n\t\t\t\t<b>DÃ©gÃ¢ts ${a.objectType}</b><br>\n\t\t\t\tPdSm&nbsp;: ${a.pdsm} â€“ RD&nbsp;: ${a.rd}<br>\n\t\t\t\tDÃ©gÃ¢ts&nbsp;: ${a.netDamages} (${a.damagesLevel})<br>\n\t\t\t\tPdS restant&nbsp;: ${a.pds} (${a.stateLevel})\n\t\t\t`;if(a.sideEffects.length){n+="<br>";for(let e of a.sideEffects)n+=`â€¢&nbsp;${e[0]} niv. ${e[1]}<br>`}d.value+=n,i("chat-roll")}))})),k.addEventListener("submit",(a=>{const n=parseInt((0,e.qs)("[data-type=vehicle-collision-pdsm]").value),r=(0,e.qs)("[data-type=vehicle-collision-severity]"),s=parseInt(r.value),o=r.options[r.selectedIndex].innerText;if(!n)return;let l;switch(s){case 1:l=Math.round((15+t("3d").result)/100*n);break;case 2:l=Math.round((40+t("3d").result)/100*n);break;case 3:l=Math.round((90+t("3d").result)/100*n);break;case 4:l=Math.round((180+t("6d").result)/100*n);break;case 5:l="vÃ©hicule dÃ©truit";break;default:l=0}const c=`<b>Collision</b> ${o}&nbsp;: dÃ©gÃ¢ts ${l}`;d.value+=c,i("chat-roll")})),L.addEventListener("submit",(async e=>{const t=new FormData(L);let a=await s("/api/npc-generator",t);if(a.error)return d.value+="ParamÃ¨tres PNJ invalides",void i("chat-roll");if(a["name-only"])return d.value+=a.name,void i("chat-roll");const n=a.facialHair?`${a.facialHair},`:"",r="moyenne"!==a.corpulence?`${a.corpulence}, `:"",o="moyenne"!==a.size?`${a.size}, `:"",l="moyenne"!==a.beauty?`${a.beauty}, `:"",c="moyenne"!==a.intelligence?`${a.intelligence}, `:"",p=a.specialTraits?`<br>Choisir une particularitÃ© parmi&nbsp;: <i>${a.specialTraits}</i>`:"";d.value+=`\n\t\t<b>${a.name}</b><br>\n\t\t${a.hair},\n\t\t${n}\n\t\tyeux ${a.eyes},\n\t\t${r}\n\t\t${o}\n\t\t${l}\n\t\t${c}\n\t\t${a.social}\n\t\t${p}\n\t`,i("chat-roll"),localStorage.setItem("npc-region",L.querySelector("[name=region]").value)})),null!==localStorage.getItem("npc-region")&&(L.querySelector("[name=region]").value=localStorage.getItem("npc-region"));const P=(0,e.qs)("[data-role=widget-choices]"),R=(0,e.qs)("[data-role=widget-choices] template"),F=JSON.parse(localStorage.getItem("display-widgets"))||{"simple-roll":!0,"score-tester":!0,"widget-damage-location":!0,"widget-criticals":!0};function T(){p.forEach((e=>e.hidden=!F[e.dataset.name]))}p.forEach((e=>{const t=R.content.cloneNode(!0),a=t.querySelector("input");a.dataset.name=e.dataset.name,F[e.dataset.name]&&(a.checked=!0),a.addEventListener("change",(e=>{F[a.dataset.name]=a.checked,localStorage.setItem("display-widgets",JSON.stringify(F)),T()})),t.querySelector("span").innerHTML=e.querySelector("legend").childNodes[0].textContent.trim(),P.appendChild(t)})),T()})()})();