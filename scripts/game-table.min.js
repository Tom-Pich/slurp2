(()=>{"use strict";var __webpack_modules__={771:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function qs(e){return document.querySelector(e)}function qsa(e){return document.querySelectorAll(e)}function ce(e,t=[]){let a=document.createElement(e);return t&&t.forEach((e=>{a.classList.add(e)})),a}function checkPasswordStrength(e){const t=/\d+/.test(e),a=e.length>=8,r=/\W+/.test(e),n=/\s+/.test(e),s=/[A-Z]/.test(e),o=/[a-z]/.test(e);return t&&a&&r&&!n&&s&&o}function calculate(str){if(null===str)return"";let result;str=str.replace(/[+-]+$/g,""),str=str.replace(/[^-\(\)\d/\*+\.]/g,"");try{result=eval(str)}catch(e){result=""}return result=void 0===result?"":result,result}function int(e){return isNaN(parseInt(e))?0:parseInt(e)}function coarseRound(e){let t=!1;return e<0&&(e*=-1,t=!0),e=e<50?Math.round(e):e<200?5*Math.round(e/5):e<500?10*Math.round(e/10):e<2e3?50*Math.round(e/50):100*Math.round(e/100),t&&(e*=-1),e}function trimModifier(e){return(e=e.replace(/\([+-]\d+\)$/g,"")).trimEnd()}function explicitSign(e){return e>0?`+${e}`:`${e}`}__webpack_require__.d(__webpack_exports__,{Ie:()=>explicitSign,Kf:()=>calculate,ce:()=>ce,e$:()=>int,qs:()=>qs,uJ:()=>qsa})}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var a=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](a,a.exports,__webpack_require__),a.exports}__webpack_require__.d=(e,t)=>{for(var a in t)__webpack_require__.o(t,a)&&!__webpack_require__.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var __webpack_exports__={};(()=>{var e=__webpack_require__(771);function t(e){let t,a,r,n,s=0,o=/^(\d+)d(\d{0,3})([+-/*]*)([0-9\.]+)*/.exec(e);if(null===o)s=isNaN(parseInt(e))?0:parseInt(e),t=0,a="",r="+",n=s;else if(t=parseInt(o[1]),a=""!=o[2]?parseInt(o[2]):6,r=""!=o[3]?o[3]:"+",n=null!=o[4]&&""!=o[4]?parseFloat(o[4]):0,1===t&&6===a&&"-"===r&&2===n)s=Math.floor(5*Math.random());else if(1===t&&6===a&&"-"===r&&3===n)s=Math.floor(4*Math.random());else if(1===t&&6===a&&"-"===r&&4===n)s=Math.floor(3*Math.random());else if(1===t&&6===a&&"-"===r&&5===n)s=Math.floor(2*Math.random());else{for(let e=0;e<t;e++)s+=Math.floor(Math.random()*a)+1;switch(r){case"+":s+=n;break;case"-":s-=n;break;case"*":s*=n;break;case"/":s/=n}}let l=`${t}d${6===a?"":a}${r}${n}`;return l=l.replace("+0",""),l=l.replace("-0",""),{expression:l,result:s}}async function a(){let e=new FormData;return e.append("roll",t("3d").result),await fetch("/api/localisation-table",{method:"post",body:e}).then((e=>e.json())).then((e=>e.data))}async function r(e,t,a){if(parseInt(e)&&t){let r="B."+t,n=new FormData;return n.append("for",e),n.append("notes",r),n.append("mains",a),fetch("/api/weapon-damages",{method:"post",body:n}).then((e=>e.json())).then((e=>e.data.damages.slice(2)))}}function n(t){const a=(0,e.qs)(`[data-opponent="${t}"]`);return{name:a.querySelector("[data-type=name]").value||`Protagoniste ${t}`,category:a.querySelector("[data-type=category]").value||"std",dex:a.querySelector("[data-type=dex]").value||0,san:a.querySelector("[data-type=san]").value||0,pdvm:a.querySelector("[data-type=pdvm]").value||0,pdv:a.querySelector("[data-type=pdv]").value||a.querySelector("[data-type=pdvm]").value,painResistance:a.querySelector("[data-type=pain-resistance]").value,members:a.querySelector("[data-type=members]").value}}function s(e,t){const a=e-t;let r=0;18===t?r=-1:17===t?r=e>=16?0:-1:4===t?r=e<=5?0:1:3===t?r=1:a<=-10?r=-1:a>=10&&t<=7&&(r=1);let n=a>=0?"ðŸŸ¢":"ðŸ”´";return-1===r&&(n="ðŸ˜–"),1===r&&(n="ðŸ˜Ž"),{MR:a,symbol:n,critical:r}}async function o(e,t){return fetch(e,{method:"post",body:t}).then((e=>e.json())).then((e=>e.data))}window.location.hostname;class l{constructor(e,t,a,r,n=[],s=null){this.sender=parseInt(e),this.key=t,this.type=a,this.timestamp=Date.now(),this.content=r,this.recipients=n,this.label=s}stringify(){return JSON.stringify(this)}}async function d(r,n=null){const o=window.chat.inputEntry,d=window.chat.id,c=window.chat.key,p=window.chat.ws;console.log(d);const i=/^\/(\d+,){0,10}\d+/.exec(o.value);let u=[];i&&(u=i[0].substring(1).split(","),u=u.map((e=>parseInt(e))),o.value=o.value.replace(i[0],"").trim());const m=o.value.match(/#\d{1,2}([+-]\d{1,2})?(?=\s|$)/g),y=o.value.match(/#(\d+)d(\d{0,3})([+-/*]*)([0-9\.]+)*/g),v=o.value.match(/\D(\d+)d(\d{0,3})([+-/*]*)([0-9\.]+)*/g);if(m){const a=[];m.forEach((e=>{a.push(e.replace("#",""))})),a.forEach((r=>{const l=t("3d").result;console.log(r);const d=s((0,e.Kf)(r),l),c=`[ ${r} â†’ ${l} (MR ${d.MR} ${d.symbol}) ]`;o.value=o.value.replace(`#${r}`,c),1===a.length&&null===y&&(n=d.symbol)}))}if(y){const e=[];y.forEach((t=>{e.push(t.replace("#",""))})),e.forEach((e=>{const a=`[ ${e} â†’ ${t(e).result} ]`;o.value=o.value.replace(`#${e}`,a)}))}if(v){const e=[];v.forEach((t=>{console.log(t),e.push(t.replace("D",""))}));const r=e.map((async e=>{const r=`[ ${e} â†’ ${t(e).result} â€“ ${(await a())[1]} ]`;o.value=o.value.replace(`D${e}`,r)}));await Promise.all(r)}(m||y||v)&&(r="chat-roll");const g=new l(d,c,r,o.value,u,n);p.send(g.stringify()),o.value=""}const c=(0,e.qs)("#msg-input"),p=(0,e.uJ)("fieldset[data-name]"),i=(0,e.uJ)("#widgets-container form"),u=(0,e.qs)("[data-name=simple-roll] form"),m=(0,e.qs)("[data-name=widget-reaction] form"),y=(0,e.uJ)("[data-name=score-tester] form"),v=(0,e.qs)("[data-name=widget-damage-location] form"),g=(0,e.qs)("[data-name=wound-effect] form"),h=(0,e.qs)("[data-name=widget-criticals] form"),b=(0,e.uJ)("[data-role=opponent-wrapper]"),f=(0,e.uJ)("[data-type=name-selector]");i.forEach((e=>{e.addEventListener("submit",(e=>{e.preventDefault()}))})),u.addEventListener("submit",(e=>{const a=t(u.querySelector("[data-type=dice-expression]").value);c.value+=`${a.expression} â†’ ${a.result}`,d("chat-roll")})),m.addEventListener("submit",(async a=>{const r=(0,e.e$)(m.querySelector("[data-type=reaction-modifier]").value),n=t("1d").result+r;let s=new FormData;s.append("reaction-test",n);let l=await o("/api/reaction-test",s);c.value+=`Jet de rÃ©action (${n}) â†’ ${l}`,d("chat-roll")})),y.forEach((a=>{const r=a.querySelector("[data-type=skill-name]"),n=r.dataset.skillNumber,o=a.querySelector("[data-type=score]");r.value=localStorage.getItem(`skill-${n}-name`),o.value=localStorage.getItem(`skill-${n}-score`),["keyup","change"].forEach((e=>{a.addEventListener(e,(e=>{localStorage.setItem(`skill-${n}-name`,r.value),""===r.value&&(o.value=""),localStorage.setItem(`skill-${n}-score`,o.value)}))})),a.addEventListener("submit",(n=>{const l=r.value,p=parseInt(o.value);if(isNaN(p)||""===l)return;let i=parseInt(a.querySelector("[data-type=modif]").value);i=(0,e.e$)(i);const u=p+i,m=t("3d").result,y=s(u,m),v=0===i?"":(0,e.Ie)(i);c.value+=`${l} (${p}${v}) â†’ ${m} (MR ${y.MR} ${y.symbol})`,d("chat-roll",y.symbol)}))}));const $=v.querySelector("[data-type=strength]"),q=v.querySelector("[data-type=weapon-code]"),_=v.querySelector("[data-type=hands]"),w=v.querySelector("[data-type=dice-code]");$.addEventListener("keyup",(async e=>{w.value=await r($.value,q.value,_.value)})),q.addEventListener("keyup",(async e=>{w.value=await r($.value,q.value,_.value)})),_.addEventListener("change",(async e=>{w.value=await r($.value,q.value,_.value)})),v.addEventListener("submit",(async e=>{const r=t(w.value),n=await a();g.querySelector("[data-type=raw-dmg]").value=r.result,g.querySelector("[data-type=localisation]").value=n[1],c.value+=`DÃ©gÃ¢ts (${r.expression})&nbsp;: ${r.result} â€“ ${n[0]}`,d("chat-roll")})),h.addEventListener("submit",(async e=>{const a=h.querySelector("[data-type=critical-categories]").value;let r=new FormData;r.append("table",a),r.append("roll-3d",t("3d").result),r.append("roll-1d",t("1d").result);const n=await o("/api/critical-tables",r);c.value+=`${n}`,d("chat-roll")}));const S=(0,e.qs)("#burst-widget");S.addEventListener("submit",(async e=>{const r=S.querySelector("[data-type=rcl]").value,n=S.querySelector("[data-type=fired-bullets]").value,s=S.querySelector("[data-type=mr]").value,o=S.querySelector("[data-type=damage-dices]").value;let l=new FormData;l.append("rcl",r),l.append("bullets",n),l.append("mr",s);const p=await fetch("/api/burst-hits",{method:"post",body:l}).then((e=>e.json())).then((e=>e.data));let i=[];for(let e=0;e<p;e++){const e=t(o).result,r=await a();i.push(`${e} â€“ ${r}`)}let u=`<b>Rafale&nbsp;:</b> Rcl ${r} â€“ Balles ${n} â€“ MR ${s}`;i.forEach(((e,t)=>{u+=`<br><b>${t+1}.</b> ${e}`})),c.value+=u,d("chat-roll")})),b.forEach((t=>{const a=t.dataset.opponent,r=t.querySelector("[data-type=name]"),n=t.querySelector("[data-type=category]"),s=t.querySelector("[data-type=dex]"),o=t.querySelector("[data-type=san]"),l=t.querySelector("[data-type=pain-resistance]"),d=t.querySelector("[data-type=pdvm]"),c=t.querySelector("[data-type=pdv]"),p=t.querySelector("[data-type=members]");r.value=localStorage.getItem(`opponent-${a}-name`),n.value=localStorage.getItem(`opponent-${a}-category`)||"std",s.value=localStorage.getItem(`opponent-${a}-dex`),o.value=localStorage.getItem(`opponent-${a}-san`),l.value=localStorage.getItem(`opponent-${a}-pain-resistance`),d.value=localStorage.getItem(`opponent-${a}-pdvm`),c.value=localStorage.getItem(`opponent-${a}-pdv`),p.value=localStorage.getItem(`opponent-${a}-members`),t.addEventListener("keyup",(e=>{"name"===e.target.dataset.type&&""===e.target.value&&(["name","category","dex","san","pain-resistance","pdvm","pdv","members"].forEach((e=>{t.querySelector(`[data-type=${e}]`).value="",localStorage.removeItem(`opponent-${a}-${e}`)})),t.querySelector("[data-type=category]").value="std");const r=e.target.dataset.type,n=e.target.value;localStorage.setItem(`opponent-${a}-${r}`,n)})),t.addEventListener("change",(e=>{"category"===e.target.dataset.type&&localStorage.setItem(`opponent-${a}-category`,e.target.value)})),r.addEventListener("keyup",(e=>{f.forEach((e=>{e.options[a-1].innerText=""!==r.value?r.value:`Protagoniste ${a}`}))})),r.dispatchEvent(new Event("keyup")),d.addEventListener("blur",(e=>{""===c.value&&(c.value=d.value)})),c.addEventListener("blur",(t=>{c.value=(0,e.Kf)(c.value)}))}));const E=(0,e.qs)("#general-state-widget");E.addEventListener("submit",(e=>{const t=n(E.querySelector("[data-type=name-selector]").value),a=new FormData;a.append("san",t.san),a.append("pdvm",t.pdvm),a.append("pdv",t.pdv),a.append("pain-resistance",t.painResistance),a.append("members",t.members),fetch("/api/general-state",{method:"post",body:a}).then((e=>e.json())).then((e=>{let a=`\n\t\t\t\tÃ‰tat gÃ©nÃ©ral de <b>${t.name}</b><br>\n\t\t\t\t${e.data.general}\n\t\t\t`;if(void 0!==e.data.members)for(const[t,r]of Object.entries(e.data.members))a+=`<br>${t}&nbsp;: ${r}`;c.value+=a,d("chat-roll")}))})),g.addEventListener("submit",(a=>{const r=g.querySelector("[data-type=name-selector]").value,s=n(r),o=t(g.querySelector("[data-type=raw-dmg]").value).result,l=g.querySelector("[data-type=rd]").value,p=g.querySelector("[data-type=dmg-type]").value,i=g.querySelector("[data-type=bullet-type]").value,u=g.querySelector("[data-type=localisation]").value,m=[];for(let e=0;e<7;e++)m.push(t("3d").result);if(parseInt(s.dex)<=0||parseInt(s.san)<=0||parseInt(s.pdvm)<=0)return c.value+="Data opposants manquantes",void d("chat-roll");const y=new FormData;y.append("category",s.category),y.append("dex",s.dex),y.append("san",s.san),y.append("pdvm",s.pdvm),y.append("pdv",s.pdv),y.append("pain-resistance",s.painResistance),y.append("raw-dmg",o||0),y.append("rd",l||0),y.append("dmg-type",p),y.append("bullet-type",i),y.append("localisation",u),y.append("rolls",m),fetch("/api/wound-effects",{method:"post",body:y}).then((e=>e.json())).then((t=>{const a=t.data;if(a.pdvm<=0)throw new Error("Il manque des donnÃ©es.");let n=`<b>${s.name} â€“ ${a["dÃ©gÃ¢ts bruts"]} ( ${a["type dÃ©gÃ¢ts"]} ${a.localisation})</b>`,o=!0;n+=`<br>DÃ©gÃ¢ts effectifs&nbsp;: ${a["dÃ©gÃ¢ts effectifs"]}`,a.recul&&(n+=`<br>Recul de ${a.recul}&nbsp; m.`),a.mort&&(n+=`<br>${a.mort}`,o=!1),o&&(a["autres effets"]&&(n+=`<br>${a["autres effets"]}`),a["sonnÃ©"]&&!a["perte de conscience"]&&(n+=`<br>${a["sonnÃ©"]}`),a["perte de conscience"]&&(n+="<br>Le personnage perd conscience."),a.chute&&!a["perte de conscience"]&&(n+="<br>Le personnage chÃ»te."),a["dÃ©gÃ¢ts membre"]&&(n+=`<br>${a["dÃ©gÃ¢ts membre"]}`,""!==a["Ã©tat membre"]&&(n+=` (${a["Ã©tat membre"]})`))),c.value+=n,d("chat-roll"),(0,e.qs)(`[data-opponent="${r}"]`).querySelector("[data-type=pdv]").value=a.pdv}))}));const k=g.querySelector("[data-type=dmg-type]"),I=g.querySelector("[data-type=bullet-type]");k.addEventListener("change",(e=>{["b0","b1","b2","b3"].includes(k.value)?I.disabled=!1:(I.value="std",I.disabled=!0)}));const x=(0,e.qs)(["[data-name=fright-check] form"]);x.addEventListener("submit",(async a=>{const r=x.querySelector(["[data-type=fright-level]"]).value,n=(0,e.e$)(x.querySelector(["[data-type=sf-score]"]).value),l=(0,e.e$)(x.querySelector(["[data-type=sf-modif]"]).value),p=(0,e.e$)(x.querySelector(["[data-type=san-score]"]).value),i=n+l;if(n<=0||p<=0&&r>=5)return void a.preventDefault();const u=new FormData,m=s(i,t("3d").result),y=[];for(let e=0;e<=6;e++)y.push(t("3d").result);u.append("fright-level",r),u.append("sf-score",n),u.append("san-score",p),u.append("frightcheck-MR",m.MR),u.append("frightcheck-symbol",m.symbol),u.append("frightcheck-critical",m.critical),u.append("rolls",y.join(","));let v=await o("/api/fright-check",u);c.value=v,d("chat-roll",m.symbol)})),(0,e.qs)("#explosion-widget").addEventListener("submit",(a=>{const r=(0,e.qs)("[data-type=explosion-dmg]").value,n=(0,e.qs)("[data-type=explosion-distance]").value,s=(0,e.qs)("[data-type=explosion-frag-surface]").value,o=(0,e.qs)("[data-type=explosion-frag-device]").checked,l=(t(r).result+t(r).result+t(r).result)/3*1.43,p=new FormData;p.append("damages",l),p.append("distance",n),p.append("fragmentation-surface",s),p.append("is-fragmentation-device",o),fetch("/api/explosion-damages",{method:"post",body:p}).then((e=>e.json())).then((e=>{const t=e.data,a=`<b>Explosion&nbsp;:</b> dÃ©gÃ¢ts ${t.damages} â€“ fragment(s) ${t.fragments} â€“ hauteur de chute ${t.height}&nbsp;m`;c.value+=a,d("chat-roll")}))}));const L=(0,e.qs)("[data-type=object-damages-object-type]"),M=(0,e.qs)("[data-type=object-damages-localisation-options]");L.addEventListener("change",(t=>{const a=new FormData;a.append("object-type",L.value),fetch("/api/object-localisation-options",{method:"post",body:a}).then((e=>e.json())).then((t=>{M.innerHTML="",t.data.forEach((t=>{t=t.charAt(0).toUpperCase()+t.slice(1);const a=(0,e.ce)("option");a.innerText=t,M.appendChild(a)}))}))})),(0,e.qs)("#object-damages-widget").addEventListener("submit",(a=>{const r=(0,e.qs)("[data-type=object-damages-pdsm]").value,n=(0,e.qs)("[data-type=object-damages-pds]").value,s=(0,e.qs)("[data-type=object-damages-integrite]").value,o=(0,e.qs)("[data-type=object-damages-rd]").value,l=t((0,e.qs)("[data-type=object-damages-damages-code]").value).result;if(isNaN(parseInt(r))||isNaN(parseInt(s))||isNaN(parseInt(l)))return;const p=new FormData;p.append("pdsm",r),p.append("pds",n),p.append("integrite",s),p.append("rd",o),p.append("dmgValue",l),p.append("dmgType",(0,e.qs)("[data-type=object-damages-damages-type]").value),p.append("objectType",L.value),p.append("localisation",M.value),p.append("rolls",[t("3d").result,t("3d").result,t("3d").result,t("3d").result]),fetch("/api/object-damages-effects",{method:"post",body:p}).then((e=>e.json())).then((t=>{const a=t.data;console.log(a),(0,e.qs)("[data-type=object-damages-pds]").value=a.pds;let r=`\n\t\t\t\t<b>DÃ©gÃ¢ts ${a.objectType}</b><br>\n\t\t\t\tPdSm&nbsp;: ${a.pdsm} â€“ RD&nbsp;: ${a.rd}<br>\n\t\t\t\tDÃ©gÃ¢ts&nbsp;: ${a.netDamages} (${a.damagesLevel})<br>\n\t\t\t\tPdS restant&nbsp;: ${a.pds} (${a.stateLevel})\n\t\t\t`;if(a.sideEffects.length){r+="<br>";for(let e of a.sideEffects)r+=`â€¢&nbsp;${e[0]} niv. ${e[1]}<br>`}c.value+=r,d("chat-roll")}))})),(0,e.qs)("#vehicle-collision-widget").addEventListener("submit",(a=>{const r=parseInt((0,e.qs)("[data-type=vehicle-collision-pdsm]").value),n=(0,e.qs)("[data-type=vehicle-collision-severity]"),s=parseInt(n.value),o=n.options[n.selectedIndex].innerText;if(!r)return;let l;switch(s){case 1:l=Math.round((15+t("3d").result)/100*r);break;case 2:l=Math.round((40+t("3d").result)/100*r);break;case 3:l=Math.round((90+t("3d").result)/100*r);break;case 4:l=Math.round((180+t("6d").result)/100*r);break;case 5:l="vÃ©hicule dÃ©truit";break;default:l=0}const p=`<b>Collision</b> ${o}&nbsp;: dÃ©gÃ¢ts ${l}`;c.value+=p,d("chat-roll")}));const j=(0,e.qs)("[data-name=npc-generator] form");j.addEventListener("submit",(async e=>{const t=j.querySelector("[data-type=gender]").value,a=j.querySelector("[data-type=region]").value,r=j.querySelector("[data-type=profile]").value,n=new FormData;n.append("gender",t),n.append("region",a),n.append("profile",r);let s=await o("/api/npc-generator",n);if(s.error)return c.value+="ParamÃ¨tres PNJ invalides",void d("chat-roll");const l=s.facialHair?`${s.facialHair},`:"",p="moyenne"!==s.corpulence?`${s.corpulence}, `:"",i="moyenne"!==s.size?`${s.size}, `:"",u="moyenne"!==s.beauty?`${s.beauty}, `:"",m="moyenne"!==s.intelligence?`${s.intelligence}, `:"",y=s.specialTraits?`<br>Choisir une particularitÃ© parmi&nbsp;: <i>${s.specialTraits}</i>`:"";c.value+=`\n\t\t<b>${s.name}</b><br>\n\t\t${s.hair},\n\t\t${l}\n\t\tyeux ${s.eyes},\n\t\t${p}\n\t\t${i}\n\t\t${u}\n\t\t${m}\n\t\t${s.social}\n\t\t${y}\n\t`,d("chat-roll")}));const D=(0,e.qs)("[data-role=widget-choices]"),N=(0,e.qs)("[data-role=widget-choices] template"),R=JSON.parse(localStorage.getItem("display-widgets"))||{"simple-roll":!0,"score-tester":!0,"widget-damage-location":!0,"widget-criticals":!0};function F(){p.forEach((e=>{e.hidden=!R[e.dataset.name]}))}p.forEach((e=>{const t=N.content.cloneNode(!0),a=t.querySelector("input");a.dataset.name=e.dataset.name,R[e.dataset.name]&&(a.checked=!0),a.addEventListener("change",(e=>{R[a.dataset.name]=a.checked,localStorage.setItem("display-widgets",JSON.stringify(R)),F()})),t.querySelector("span").innerHTML=e.querySelector("legend").innerHTML,D.appendChild(t)})),F()})()})();